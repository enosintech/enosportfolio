/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Tom Hodes (https://sketchfab.com/tomhodes)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/blue-eyeball-free-18915d2f17a2431fbefeb3eaf4411f16
Title: Blue Eyeball (Free)
*/

import React, { useRef } from 'react'
import { useGSAP } from '@gsap/react';
import { useGLTF } from '@react-three/drei'

import { noTriggerToAnimations, triggerToAnimations } from '../utils/animations';

export function Model(props) {
  const { nodes, materials } = useGLTF('/assets/models/blue_eyeball_free.glb')

  const modelRef = useRef();

  useGSAP(() => {

    triggerToAnimations(modelRef?.current.scale, {
      x: 12, 
      y: 12,
      z: 6,
      ease: "power1.in",
    }, {
      trigger: '#eyescale',
      start: "top bottom",
      end: "bottom bottom",
      scrub: true,
    })

    triggerToAnimations(modelRef?.current.rotation, {
        x: 0,
        y: 0,
        z: 0,
        duration: 1,
        ease: "power1.in",
    }, {
        trigger: "#eyescale",
        start: "top 60%",
        toggleActions: 'play none none reverse'
    })

    const landingContainer = document.getElementById("landing");

    landingContainer.addEventListener("mousemove", (e) => {

      const mouseX = e.clientX;
      const mouseY = e.clientY;

      const anchor = document.querySelector(".circle");
      const rekt = anchor.getBoundingClientRect();
      const anchorX = rekt.left + rekt.width / 2;
      const anchorY = rekt.top + rekt.height / 2;

      const angleDeg = angle(mouseX, mouseY, anchorX, anchorY);

      noTriggerToAnimations(modelRef?.current.rotation, {
        x: angleDeg < 90 && angleDeg > 0 || angleDeg > 90  ? -0.2 : 0.2,
        y: angleDeg < 90 && angleDeg > -90 ? -0.2 : 0.2
      })

    })

  }, [])

  const angle = (cx, cy, ex, ey) => {
    const dy = ey - cy;
    const dx = ex - cx;
    const rad = Math.atan2(dy, dx);
    const deg = rad * 180 / Math.PI;
    return deg;
  }

  return (
    <group {...props} dispose={null}>
      <group ref={modelRef} scale={[2.27, 2.27, 2.27]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial.geometry}
          material={materials.blinn2}
          rotation={[0, 0, Math.PI / 4]}
          scale={[1, 1, 1]}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/assets/model/blue_eyeball_free.glb');